(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{308:function(t,s,a){"use strict";a.r(s);var n=a(1),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h4",{attrs:{id:"set-和-map"}},[t._v("Set 和 Map")]),t._v(" "),a("p",[t._v("Set 和 Map 都是 ES6 中新增的数据结构，是对当前 JS 数组和对象这两种重要数据结构的扩展。由于是新增的数据结构")]),t._v(" "),a("ul",[a("li",[t._v("Set 类似于数组，但数组可以允许元素重复，Set 不允许元素重复")]),t._v(" "),a("li",[t._v("Map 类似于对象，但普通对象的 key 必须是字符串或者数字，而 Map 的 key 可以是任何数据类型...")])]),t._v(" "),a("h5",{attrs:{id:"set"}},[t._v("Set")]),t._v(" "),a("p",[t._v("Set 实例不允许元素有重复，可以通过以下示例证明。可以通过一个数组初始化一个 Set 实例，或者通过add添加元素，元素不能重复，重复的会被忽略。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("// 例"),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v("\nconst set = new Set("),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole.log(set"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // Set("),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n// 例"),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\nconst set = new Set("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".forEach(item => set.add(item"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfor (let item of set"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(item"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),t._v("\n")])])]),a("p",[t._v("Set 实例的属性和方法有")]),t._v(" "),a("ul",[a("li",[t._v("size：获取元素数量。")]),t._v(" "),a("li",[t._v("add(value)：添加元素，返回 Set 实例本身。")]),t._v(" "),a("li",[t._v("delete(value)：删除元素，返回一个布尔值，表示删除是否成功。")]),t._v(" "),a("li",[t._v("has(value)：返回一个布尔值，表示该值是否是 Set 实例的元素。")]),t._v(" "),a("li",[t._v("clear()：清除所有元素，没有返回值。")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("const s = new Set("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns.add("),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".add("),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".add("),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 添加元素\n\ns.size // "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n\ns.has("),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\ns.has("),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\ns.has("),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\ns.delete("),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns.has("),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\ns.clear("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole.log(s"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  // Set("),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"set-实例的遍历，可使用如下方法"}},[t._v("Set 实例的遍历，可使用如下方法")]),t._v(" "),a("ul",[a("li",[t._v("keys()：返回键名的遍历器。")]),t._v(" "),a("li",[t._v("values()：返回键值的遍历器。不过由于 Set 结构没有键名，只有键值（或者说键名和键值是同一个值），所以keys()和values()返回结果一致。")]),t._v(" "),a("li",[t._v("entries()：返回键值对的遍历器。")]),t._v(" "),a("li",[t._v("forEach()：使用回调函数遍历每个成员。")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("let set = new Set("),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("'aaa'"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 'bbb'"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 'ccc'"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfor (let item of set.keys("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(item"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// aaa\n// bbb\n// ccc\n\nfor (let item of set.values("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(item"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// aaa\n// bbb\n// ccc\n\nfor (let item of set.entries("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(item"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"aaa"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"aaa"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"bbb"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"bbb"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n// "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"ccc"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"ccc"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nset.forEach((value"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" => console.log(key + ' "),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ' + value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n// aaa "),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" aaa\n// bbb "),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" bbb\n// ccc "),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ccc...\n\n")])])]),a("h5",{attrs:{id:"map"}},[t._v("Map")]),t._v(" "),a("p",[t._v("Map 的用法和普通对象基本一致，先看一下它能用非字符串或者数字作为 key 的特性。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("const map = new Map("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconst obj = "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("p"),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'Hello World'"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmap.set(obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 'OK'"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmap.get(obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token string"}},[t._v('"OK"')]),t._v("\n\nmap.has(obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nmap.delete(obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\nmap.has(obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),a("p",[t._v("需要使用new Map()初始化一个实例，下面代码中set get has delete顾名即可思义（下文也会演示）。其中，map.set(obj, 'OK')就是用对象作为的 key （不光可以是对象，任何数据类型都可以），并且后面通过map.get(obj)正确获取了。")]),t._v(" "),a("p",[t._v("Map 实例的属性和方法如下：")]),t._v(" "),a("p",[t._v("size：获取成员的数量\nset：设置成员 key 和 value\nget：获取成员属性值\nhas：判断成员是否存在\ndelete：删除成员\nclear：清空所有")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("const map = new Map("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap.set('aaa'"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap.set('bbb'"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("200")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmap.size // "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n\nmap.get('aaa'"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\n\nmap.has('aaa'"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\nmap.delete('aaa'"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmap.has('aaa'"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\nmap.clear("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Map 实例的遍历方法有：")]),t._v(" "),a("ul",[a("li",[t._v("keys()：返回键名的遍历器。")]),t._v(" "),a("li",[t._v("values()：返回键值的遍历器。")]),t._v(" "),a("li",[t._v("entries()：返回所有成员的遍历器。")]),t._v(" "),a("li",[t._v("forEach()：遍历 Map 的所有成员。")]),t._v(" "),a("li",[t._v("const map = new Map();")]),t._v(" "),a("li",[t._v("map.set('aaa', 100);")]),t._v(" "),a("li",[t._v("map.set('bbb', 200);")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("for (let key of map.keys("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(key"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// "),a("span",{attrs:{class:"token string"}},[t._v('"aaa"')]),t._v("\n// "),a("span",{attrs:{class:"token string"}},[t._v('"bbb"')]),t._v("\n\nfor (let value of map.values("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// "),a("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\n// "),a("span",{attrs:{class:"token number"}},[t._v("200")]),t._v("\n\nfor (let item of map.entries("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(item"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfor (let item of map.entries("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(item"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// aaa "),a("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\n// bbb "),a("span",{attrs:{class:"token number"}},[t._v("200")]),t._v("\n\n// 或者\nfor (let "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" of map.entries("),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console.log(key"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n// aaa "),a("span",{attrs:{class:"token number"}},[t._v("100")]),t._v("\n// bbb "),a("span",{attrs:{class:"token number"}},[t._v("200")]),t._v("\n")])])])])}],!1,null,null,null);o.options.__file="set-and-map.md";s.default=o.exports}}]);